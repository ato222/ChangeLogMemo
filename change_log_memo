#!/usr/bin/env ruby

require "fileutils"
require "dotenv"
require "gmail"

class ChangeLogMemo
  def initialize(memo)
    @memo = memo
  end

  def run
    Dotenv.load(Utils.exec_dir + "/.env")
    write_to_changelog
    display_archive
    send_archive_to_gmail
  end

  def write_to_changelog
    return if @memo.nil?

    write_date
    write_memo
  end

  def write_date
    return if check_if_wrote_today

    File.open(ENV["HOME"] + "/ChangeLog", "a") do |file|
      username = (ENV['USERNAME'].nil?) ? "FooBarBaz" : ENV['USERNAME']
      email    = (ENV['EMAIL'].nil?) ? "foo@bar.baz" : ENV['EMAIL']
      file.write Utils.today + " #{username} <#{email}>" + "\n\n"
    end

    update_wrote_log
  end

  def check_if_wrote_today
    unless File.exist?(Utils.exec_dir + "/pre_wrote_time_log.txt") # first time
      FileUtils.touch(Utils.exec_dir + "/pre_wrote_time_log.txt")
    end

    File.open(Utils.exec_dir + "/pre_wrote_time_log.txt") do |file|
      pre_date = file.read.strip
      return false if pre_date.empty? # first time
      (Utils.today == pre_date) ? true : false;
    end
  end

  def update_wrote_log
    File.open(Utils.exec_dir + "/pre_wrote_time_log.txt", "w+") do |file|
      file.write Utils.today
    end
  end

  def write_memo
    File.open(ENV["HOME"] + "/ChangeLog", "a") do |file|
      file.write "  * " + @memo + "\n\n"
    end
  end

  def display_archive
    path = ENV["HOME"] + "/ChangeLog"
    system('cat ' + path)
  end

  def send_archive_to_gmail
    username = ENV['EMAIL']
    password = ENV['GOOGLE_PASSWORD']

    return if username.nil? || password.nil?

    Gmail.new(username, password) do |gmail|
      gmail.deliver do
        to username
        subject "ChangeLog Memo"
        text_part do
          body File.open(ENV["HOME"] + "/ChangeLog").read.to_utf8
        end
      end
    end
  end
end

module Utils
  def self.today
    Time.now.strftime("%Y-%m-%d").to_s
  end

  def self.exec_dir
    File.expand_path(File.dirname(__FILE__))
  end
end

ChangeLogMemo.new(ARGV[0]).run
